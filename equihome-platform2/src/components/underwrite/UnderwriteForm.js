import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import Input from '../ui/input';
const UnderwriteForm = ({ onSubmit, loading, initialValues }) => {
    const [formData, setFormData] = useState({
        borrowerName: '',
        annualIncome: 0,
        employmentStatus: '',
        propertyAddress: '',
        propertyType: '',
        currentValue: 0,
        mortgageBalance: 0,
        loanAmount: 0,
        loanPurpose: '',
        loanTerm: 10,
        forecastedGrowth: 5
    });
    // Update form data when initialValues changes
    useEffect(() => {
        if (initialValues) {
            setFormData(initialValues);
        }
    }, [initialValues]);
    const handleSubmit = (e) => {
        e.preventDefault();
        onSubmit(formData);
    };
    const handleChange = (field, value) => {
        setFormData(prev => ({
            ...prev,
            [field]: value
        }));
    };
    return (_jsx("form", { onSubmit: handleSubmit, className: "bg-white rounded-lg shadow-sm p-6", children: _jsxs("div", { className: "space-y-8", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Borrower Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Full Name" }), _jsx(Input, { type: "text", value: formData.borrowerName, onChange: (value) => handleChange('borrowerName', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Annual Income" }), _jsx(Input, { type: "number", formatNumber: true, value: formData.annualIncome, onChange: (value) => handleChange('annualIncome', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] })] }), _jsxs("div", { className: "mt-4", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Employment Status" }), _jsxs("select", { value: formData.employmentStatus, onChange: (e) => handleChange('employmentStatus', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true, children: [_jsx("option", { value: "", children: "Select status" }), _jsx("option", { value: "employed", children: "Employed" }), _jsx("option", { value: "self-employed", children: "Self-Employed" }), _jsx("option", { value: "retired", children: "Retired" }), _jsx("option", { value: "other", children: "Other" })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Property Information" }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Property Address" }), _jsx(Input, { type: "text", value: formData.propertyAddress, onChange: (value) => handleChange('propertyAddress', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4 mt-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Property Type" }), _jsxs("select", { value: formData.propertyType, onChange: (e) => handleChange('propertyType', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true, children: [_jsx("option", { value: "", children: "Select type" }), _jsx("option", { value: "house", children: "House" }), _jsx("option", { value: "apartment", children: "Apartment" }), _jsx("option", { value: "townhouse", children: "Townhouse" }), _jsx("option", { value: "villa", children: "Villa" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "PropTrack AVM Value" }), _jsx(Input, { type: "number", formatNumber: true, value: formData.currentValue, onChange: (value) => handleChange('currentValue', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Loan Details" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Current Mortgage Balance" }), _jsx(Input, { type: "number", formatNumber: true, value: formData.mortgageBalance, onChange: (value) => handleChange('mortgageBalance', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Requested Loan Amount" }), _jsx(Input, { type: "number", formatNumber: true, value: formData.loanAmount, onChange: (value) => handleChange('loanAmount', value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4 mt-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Loan Purpose" }), _jsxs("select", { value: formData.loanPurpose, onChange: (e) => handleChange('loanPurpose', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true, children: [_jsx("option", { value: "", children: "Select purpose" }), _jsx("option", { value: "refinance", children: "Refinance" }), _jsx("option", { value: "renovation", children: "Renovation" }), _jsx("option", { value: "investment", children: "Investment" }), _jsx("option", { value: "other", children: "Other" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Loan Term (Years)" }), _jsxs("select", { value: formData.loanTerm, onChange: (e) => handleChange('loanTerm', parseInt(e.target.value)), className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500", required: true, children: [_jsx("option", { value: "5", children: "5" }), _jsx("option", { value: "7", children: "7" }), _jsx("option", { value: "10", children: "10" })] })] })] })] }), _jsx("div", { className: "pt-4", children: _jsx("button", { type: "submit", disabled: loading, className: "w-full flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed", children: loading ? 'Analyzing...' : 'Get Loan Decision' }) })] }) }));
};
export default UnderwriteForm;
